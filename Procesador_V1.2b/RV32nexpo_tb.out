#! /usr/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision - 12;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0xa0398c0 .scope module, "RV32nexpo_tb" "RV32nexpo_tb" 2 3;
 .timescale -9 -12;
v0xa078b10 .array "MEM", 255 0, 31 0;
v0xa078b60_0 .net "PC", 31 0, L_0xa0793f0; 1 drivers
v0xa078bd0_0 .var "_RST", 0 0;
v0xa078c40_0 .var "clk", 0 0;
v0xa078c90_0 .net "end_prog", 0 0, v0xa077a60_0; 1 drivers
v0xa078f38_0 .net "error", 0 0, v0xa077c70_0; 1 drivers
v0xa078f88_0 .var/i "i", 31 0;
v0xa078fd8_0 .var "instr", 31 0;
v0xa079028_0 .var "leds", 31 0;
v0xa079078_0 .net "mem_address", 31 0, L_0xa07fe10; 1 drivers
v0xa0790e8_0 .var "mem_in", 31 0;
v0xa079170_0 .net "mem_mask", 3 0, L_0xa07d290; 1 drivers
RS_0xa04fb94 .resolv tri, L_0xa07e568, L_0xa07e640, L_0xa07e910, L_0xa07ebf0;
v0xa079230_0 .net8 "mem_out", 31 0, RS_0xa04fb94; 4 drivers
v0xa0792b8_0 .net "mem_read", 0 0, v0xa0781d8_0; 1 drivers
v0xa079308_0 .net "mem_write", 0 0, L_0xa07fda0; 1 drivers
v0xa079358_0 .var "rst", 0 0;
E_0xa01d370 .event edge, v0xa075900_0;
E_0xa00a918 .event negedge, v0xa075900_0;
S_0xa00f648 .scope module, "uut" "RV32nexpo" 2 12, 3 11, S_0xa0398c0;
 .timescale -9 -12;
P_0xa009d24 .param/l "_DEBUG" 3 53, +C4<0100>;
P_0xa009d38 .param/l "_ERROR" 3 51, +C4<010>;
P_0xa009d4c .param/l "_RUN" 3 50, +C4<01>;
P_0xa009d60 .param/l "_START" 3 49, +C4<0>;
P_0xa009d74 .param/l "_WAIT" 3 52, +C4<011>;
L_0xa079c20 .functor OR 1, L_0xa080228, v0xa078188_0, C4<0>, C4<0>;
L_0xa07b4c0 .functor AND 5, L_0xa079a18, L_0xa07b470, C4<11111>, C4<11111>;
L_0xa07b598 .functor OR 1, v0xa077fc0_0, v0xa077eb0_0, C4<0>, C4<0>;
L_0xa07b840 .functor NOT 32, L_0xa07b8c8, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0xa07cc00 .functor AND 32, v0xa0761b8_0, L_0xa07b840, C4<11111111111111111111111111111111>, C4<11111111111111111111111111111111>;
L_0xa07ce98 .functor OR 32, v0xa0761b8_0, L_0xa07b8c8, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0xa07ce28 .functor BUFZ 32, v0xa074918_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0xa07d1b8 .functor BUFZ 32, L_0xa07b378, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0xa07fda0 .functor BUFZ 1, v0xa078070_0, C4<0>, C4<0>, C4<0>;
L_0xa080148 .functor AND 1, v0xa077eb0_0, v0xa0753b8_0, C4<1>, C4<1>;
L_0xa080228 .functor OR 1, v0xa077f70_0, L_0xa080148, C4<0>, C4<0>;
v0xa075c80_0 .net "ALUCtrl", 3 0, L_0xa07b878; 1 drivers
v0xa075ce0_0 .var "ALUSrc1", 0 0;
v0xa075d30_0 .var "ALUSrc2", 0 0;
v0xa075d90_0 .net "ALUbranch", 0 0, v0xa0753b8_0; 1 drivers
v0xa075e00_0 .net "ALUin1", 31 0, L_0xa07b638; 1 drivers
v0xa075e70_0 .net "ALUin2", 31 0, L_0xa07b6f8; 1 drivers
v0xa075f00_0 .net "ALUout", 31 0, v0xa074918_0; 1 drivers
v0xa075f70_0 .net "Bimm", 31 0, L_0xa07a6b8; 1 drivers
v0xa075fc0_0 .var "CSRRead", 0 0;
v0xa076010_0 .var "CSRWrite", 0 0;
v0xa076060_0 .net "CSR_WrIN", 31 0, L_0xa07cda0; 1 drivers
v0xa0760c0_0 .net "CSR_Xtern", 31 0, L_0xa07b8c8; 1 drivers
v0xa076158_0 .net "CSR_mod", 31 0, L_0xa07cf08; 1 drivers
v0xa0761b8_0 .var "CSR_value", 31 0;
v0xa076218_0 .var "CSRen", 0 0;
v0xa076278_0 .net "Iimm", 31 0, L_0xa079e60; 1 drivers
v0xa076320_0 .alias "InstrAddr", 31 0, v0xa078b60_0;
v0xa076380_0 .net "InstrData", 31 0, v0xa078fd8_0; 1 drivers
v0xa076420_0 .net "Jimm", 31 0, L_0xa07ae10; 1 drivers
v0xa076470_0 .net "MemWrite", 0 0, v0xa078070_0; 1 drivers
v0xa0763d0_0 .var "MemtoReg", 0 0;
v0xa076518_0 .net "PC_src1", 0 0, L_0xa080228; 1 drivers
v0xa0764c0_0 .net "PC_src2", 0 0, v0xa078188_0; 1 drivers
v0xa0765c8_0 .var "PWM_", 31 0;
v0xa076578_0 .var "PcPlus4toReg", 0 0;
v0xa076690_0 .var "RegWrite", 0 0;
v0xa076750_0 .net "Simm", 31 0, L_0xa079ed0; 1 drivers
v0xa0767a0_0 .net "Uimm", 31 0, L_0xa07b128; 1 drivers
v0xa0766e0_0 .net "WBData", 31 0, L_0xa07fed0; 1 drivers
v0xa076868_0 .net *"_s100", 3 0, C4<0000>; 1 drivers
v0xa0767f0_0 .net *"_s105", 0 0, L_0xa07ca88; 1 drivers
v0xa076938_0 .net *"_s106", 26 0, C4<000000000000000000000000000>; 1 drivers
v0xa0768b8_0 .net *"_s108", 31 0, L_0xa07cb20; 1 drivers
v0xa076a10_0 .net *"_s113", 0 0, L_0xa07cce8; 1 drivers
v0xa076988_0 .net *"_s114", 31 0, L_0xa07b840; 1 drivers
v0xa076af0_0 .net *"_s116", 31 0, L_0xa07cc00; 1 drivers
v0xa076a60_0 .net *"_s118", 31 0, L_0xa07ce98; 1 drivers
v0xa076bd8_0 .net *"_s12", 31 0, C4<00000000000000000000000000010011>; 1 drivers
v0xa076b40_0 .net *"_s123", 0 0, L_0xa07d000; 1 drivers
v0xa076cc8_0 .net *"_s143", 29 0, L_0xa07cd38; 1 drivers
v0xa076c28_0 .net *"_s144", 1 0, C4<00>; 1 drivers
v0xa076dc0_0 .net *"_s152", 31 0, L_0xa07ff80; 1 drivers
v0xa076d18_0 .net *"_s154", 31 0, L_0xa07ffd0; 1 drivers
v0xa076ec0_0 .net *"_s158", 0 0, L_0xa080148; 1 drivers
v0xa076e10_0 .net *"_s2", 32 0, L_0xa079460; 1 drivers
v0xa076e60_0 .net *"_s33", 0 0, L_0xa079c98; 1 drivers
v0xa076fd0_0 .net *"_s34", 20 0, L_0xa079d08; 1 drivers
v0xa077020_0 .net *"_s37", 10 0, L_0xa079e10; 1 drivers
v0xa076f10_0 .net *"_s41", 0 0, L_0xa07a0c8; 1 drivers
v0xa076f70_0 .net *"_s42", 20 0, L_0xa07a118; 1 drivers
v0xa077140_0 .net *"_s45", 5 0, L_0xa07a200; 1 drivers
v0xa077190_0 .net *"_s47", 4 0, L_0xa07a250; 1 drivers
v0xa077070_0 .net *"_s5", 0 0, C4<0>; 1 drivers
v0xa0770d0_0 .net *"_s51", 0 0, L_0xa07a528; 1 drivers
v0xa0772c0_0 .net *"_s52", 19 0, L_0xa07a2a0; 1 drivers
v0xa077310_0 .net *"_s55", 0 0, L_0xa07a668; 1 drivers
v0xa0771e0_0 .net *"_s57", 5 0, L_0xa07a578; 1 drivers
v0xa077240_0 .net *"_s59", 3 0, L_0xa07a720; 1 drivers
v0xa077450_0 .net *"_s6", 32 0, C4<000000000000000000000000000000100>; 1 drivers
v0xa0774a0_0 .net *"_s60", 0 0, C4<0>; 1 drivers
v0xa077360_0 .net *"_s65", 0 0, L_0xa07aba8; 1 drivers
v0xa0773b0_0 .net *"_s66", 11 0, L_0xa079b58; 1 drivers
v0xa0775f0_0 .net *"_s69", 7 0, L_0xa07ace0; 1 drivers
v0xa077640_0 .net *"_s71", 0 0, L_0xa07abf8; 1 drivers
v0xa0774f0_0 .net *"_s73", 9 0, L_0xa07ae90; 1 drivers
v0xa077550_0 .net *"_s74", 0 0, C4<0>; 1 drivers
v0xa0777a0_0 .net *"_s79", 0 0, L_0xa07b048; 1 drivers
v0xa0777f0_0 .net *"_s8", 32 0, L_0xa079590; 1 drivers
v0xa077690_0 .net *"_s81", 18 0, L_0xa07aee0; 1 drivers
v0xa0776f0_0 .net *"_s82", 11 0, C4<000000000000>; 1 drivers
v0xa077750_0 .net *"_s87", 0 0, L_0xa07b420; 1 drivers
v0xa077960_0 .net *"_s88", 4 0, L_0xa07b470; 1 drivers
v0xa077840_0 .net *"_s96", 0 0, L_0xa07b598; 1 drivers
v0xa0778a0_0 .net *"_s98", 3 0, L_0xa07b7f0; 1 drivers
v0xa077900_0 .net "address", 31 0, L_0xa07ce28; 1 drivers
v0xa077ae0_0 .net "clk", 0 0, v0xa078c40_0; 1 drivers
v0xa0779b0_0 .net "csr", 11 0, L_0xa079b08; 1 drivers
v0xa077a00_0 .var "cycle", 63 0;
v0xa077a60_0 .var "end_prog", 0 0;
v0xa077c70_0 .var "error", 0 0;
v0xa077b30_0 .var "flushEN", 0 0;
v0xa077b80_0 .var "funQual", 0 0;
v0xa077be0_0 .net "funct3", 2 0, L_0xa079938; 1 drivers
v0xa077e10_0 .net "funct7", 6 0, L_0xa079ab8; 1 drivers
v0xa077cc0_0 .var "imm", 31 0;
v0xa077d20_0 .net "instr", 31 0, L_0xa079748; 1 drivers
v0xa077d80_0 .var "instret", 63 0;
v0xa077fc0_0 .var "isALU", 0 0;
v0xa077e60_0 .var "isAUIPC", 0 0;
v0xa077eb0_0 .var "isBRANCH", 0 0;
v0xa077f10_0 .var "isFENCE", 0 0;
v0xa077f70_0 .var "isJAL", 0 0;
v0xa078188_0 .var "isJALR", 0 0;
v0xa0781d8_0 .var "isLOAD", 0 0;
v0xa078010_0 .var "isLUI", 0 0;
v0xa078070_0 .var "isSTORE", 0 0;
v0xa0780d0_0 .var "isSYSTEM", 0 0;
v0xa078130_0 .net "jump", 0 0, L_0xa079c20; 1 drivers
v0xa0783b8_0 .var "loadpcNext", 0 0;
v0xa078408_0 .alias "mem_address", 31 0, v0xa079078_0;
v0xa078228_0 .net "mem_in", 31 0, v0xa0790e8_0; 1 drivers
v0xa078298_0 .alias "mem_mask", 3 0, v0xa079170_0;
v0xa078308_0 .alias "mem_out", 31 0, v0xa079230_0;
v0xa0785f8_0 .alias "mem_read", 0 0, v0xa0792b8_0;
v0xa078458_0 .alias "mem_write", 0 0, v0xa079308_0;
v0xa0784a8_0 .var "nextState", 2 0;
v0xa078508_0 .net "opcode", 6 0, L_0xa079828; 1 drivers
v0xa078568_0 .var "pc", 31 0;
v0xa078800_0 .var "pcFetch", 31 0;
v0xa078850_0 .net "pcMas4", 31 0, L_0xa079670; 1 drivers
v0xa078648_0 .net "pcMasImm", 31 0, L_0xa080340; 1 drivers
v0xa078698_0 .net "pcNext", 31 0, L_0xa080488; 1 drivers
v0xa0786f8_0 .net "pcSuma", 31 0, L_0xa080020; 1 drivers
v0xa078758_0 .net "rd", 4 0, L_0xa0798b0; 1 drivers
v0xa078a70_0 .net "read_data", 31 0, L_0xa07e200; 1 drivers
v0xa078ac0_0 .net "reg1Data", 31 0, L_0xa07b0e8; 1 drivers
v0xa0788a0_0 .net "reg2Data", 31 0, L_0xa07b378; 1 drivers
v0xa0788f0_0 .net "rs1", 4 0, L_0xa079a18; 1 drivers
v0xa078940_0 .net "rs2", 4 0, L_0xa079a68; 1 drivers
v0xa0789b0_0 .net "rst", 0 0, v0xa078bd0_0; 1 drivers
v0xa078a00_0 .var "state", 2 0;
v0xa078cf8_0 .net "write_data", 31 0, L_0xa07d1b8; 1 drivers
E_0xa009578 .event edge, v0xa0779b0_0, v0xa0765c8_0, v0xa077a00_0, v0xa077d80_0;
E_0xa0069e0 .event edge, v0xa076218_0, v0xa077be0_0, v0xa075c20_0, v0xa0788f0_0;
E_0xa005ab0/0 .event edge, v0xa0767a0_0, v0xa077e60_0, v0xa078010_0, v0xa075f70_0;
E_0xa005ab0/1 .event edge, v0xa077eb0_0, v0xa076750_0, v0xa078070_0, v0xa076420_0;
E_0xa005ab0/2 .event edge, v0xa077f70_0, v0xa076278_0;
E_0xa005ab0 .event/or E_0xa005ab0/0, E_0xa005ab0/1, E_0xa005ab0/2;
E_0xa03ab20 .event edge, v0xa078508_0, v0xa077be0_0, v0xa077e10_0, v0xa077d20_0;
E_0xa010028/0 .event edge, v0xa078a00_0, v0xa0781d8_0, v0xa078130_0, v0xa077c70_0;
E_0xa010028/1 .event edge, v0xa077a60_0;
E_0xa010028 .event/or E_0xa010028/0, E_0xa010028/1;
L_0xa0793f0 .functor MUXZ 32, v0xa078568_0, v0xa078800_0, v0xa0783b8_0, C4<>;
L_0xa079460 .concat [ 32 1 0 0], v0xa078800_0, C4<0>;
L_0xa079590 .arith/sum 33, L_0xa079460, C4<000000000000000000000000000000100>;
L_0xa079670 .part L_0xa079590, 0, 32;
L_0xa079748 .functor MUXZ 32, v0xa078fd8_0, C4<00000000000000000000000000010011>, v0xa077b30_0, C4<>;
L_0xa079828 .part L_0xa079748, 0, 7;
L_0xa0798b0 .part L_0xa079748, 7, 5;
L_0xa079938 .part L_0xa079748, 12, 3;
L_0xa079a18 .part L_0xa079748, 15, 5;
L_0xa079a68 .part L_0xa079748, 20, 5;
L_0xa079ab8 .part L_0xa079748, 25, 7;
L_0xa079b08 .part L_0xa079748, 20, 12;
L_0xa079c98 .part L_0xa079748, 31, 1;
LS_0xa079d08_0_0 .concat [ 1 1 1 1], L_0xa079c98, L_0xa079c98, L_0xa079c98, L_0xa079c98;
LS_0xa079d08_0_4 .concat [ 1 1 1 1], L_0xa079c98, L_0xa079c98, L_0xa079c98, L_0xa079c98;
LS_0xa079d08_0_8 .concat [ 1 1 1 1], L_0xa079c98, L_0xa079c98, L_0xa079c98, L_0xa079c98;
LS_0xa079d08_0_12 .concat [ 1 1 1 1], L_0xa079c98, L_0xa079c98, L_0xa079c98, L_0xa079c98;
LS_0xa079d08_0_16 .concat [ 1 1 1 1], L_0xa079c98, L_0xa079c98, L_0xa079c98, L_0xa079c98;
LS_0xa079d08_0_20 .concat [ 1 0 0 0], L_0xa079c98;
LS_0xa079d08_1_0 .concat [ 4 4 4 4], LS_0xa079d08_0_0, LS_0xa079d08_0_4, LS_0xa079d08_0_8, LS_0xa079d08_0_12;
LS_0xa079d08_1_4 .concat [ 4 1 0 0], LS_0xa079d08_0_16, LS_0xa079d08_0_20;
L_0xa079d08 .concat [ 16 5 0 0], LS_0xa079d08_1_0, LS_0xa079d08_1_4;
L_0xa079e10 .part L_0xa079748, 20, 11;
L_0xa079e60 .concat [ 11 21 0 0], L_0xa079e10, L_0xa079d08;
L_0xa07a0c8 .part L_0xa079748, 31, 1;
LS_0xa07a118_0_0 .concat [ 1 1 1 1], L_0xa07a0c8, L_0xa07a0c8, L_0xa07a0c8, L_0xa07a0c8;
LS_0xa07a118_0_4 .concat [ 1 1 1 1], L_0xa07a0c8, L_0xa07a0c8, L_0xa07a0c8, L_0xa07a0c8;
LS_0xa07a118_0_8 .concat [ 1 1 1 1], L_0xa07a0c8, L_0xa07a0c8, L_0xa07a0c8, L_0xa07a0c8;
LS_0xa07a118_0_12 .concat [ 1 1 1 1], L_0xa07a0c8, L_0xa07a0c8, L_0xa07a0c8, L_0xa07a0c8;
LS_0xa07a118_0_16 .concat [ 1 1 1 1], L_0xa07a0c8, L_0xa07a0c8, L_0xa07a0c8, L_0xa07a0c8;
LS_0xa07a118_0_20 .concat [ 1 0 0 0], L_0xa07a0c8;
LS_0xa07a118_1_0 .concat [ 4 4 4 4], LS_0xa07a118_0_0, LS_0xa07a118_0_4, LS_0xa07a118_0_8, LS_0xa07a118_0_12;
LS_0xa07a118_1_4 .concat [ 4 1 0 0], LS_0xa07a118_0_16, LS_0xa07a118_0_20;
L_0xa07a118 .concat [ 16 5 0 0], LS_0xa07a118_1_0, LS_0xa07a118_1_4;
L_0xa07a200 .part L_0xa079748, 25, 6;
L_0xa07a250 .part L_0xa079748, 7, 5;
L_0xa079ed0 .concat [ 5 6 21 0], L_0xa07a250, L_0xa07a200, L_0xa07a118;
L_0xa07a528 .part L_0xa079748, 31, 1;
LS_0xa07a2a0_0_0 .concat [ 1 1 1 1], L_0xa07a528, L_0xa07a528, L_0xa07a528, L_0xa07a528;
LS_0xa07a2a0_0_4 .concat [ 1 1 1 1], L_0xa07a528, L_0xa07a528, L_0xa07a528, L_0xa07a528;
LS_0xa07a2a0_0_8 .concat [ 1 1 1 1], L_0xa07a528, L_0xa07a528, L_0xa07a528, L_0xa07a528;
LS_0xa07a2a0_0_12 .concat [ 1 1 1 1], L_0xa07a528, L_0xa07a528, L_0xa07a528, L_0xa07a528;
LS_0xa07a2a0_0_16 .concat [ 1 1 1 1], L_0xa07a528, L_0xa07a528, L_0xa07a528, L_0xa07a528;
LS_0xa07a2a0_1_0 .concat [ 4 4 4 4], LS_0xa07a2a0_0_0, LS_0xa07a2a0_0_4, LS_0xa07a2a0_0_8, LS_0xa07a2a0_0_12;
LS_0xa07a2a0_1_4 .concat [ 4 0 0 0], LS_0xa07a2a0_0_16;
L_0xa07a2a0 .concat [ 16 4 0 0], LS_0xa07a2a0_1_0, LS_0xa07a2a0_1_4;
L_0xa07a668 .part L_0xa079748, 7, 1;
L_0xa07a578 .part L_0xa079748, 25, 6;
L_0xa07a720 .part L_0xa079748, 8, 4;
LS_0xa07a6b8_0_0 .concat [ 1 4 6 1], C4<0>, L_0xa07a720, L_0xa07a578, L_0xa07a668;
LS_0xa07a6b8_0_4 .concat [ 20 0 0 0], L_0xa07a2a0;
L_0xa07a6b8 .concat [ 12 20 0 0], LS_0xa07a6b8_0_0, LS_0xa07a6b8_0_4;
L_0xa07aba8 .part L_0xa079748, 31, 1;
LS_0xa079b58_0_0 .concat [ 1 1 1 1], L_0xa07aba8, L_0xa07aba8, L_0xa07aba8, L_0xa07aba8;
LS_0xa079b58_0_4 .concat [ 1 1 1 1], L_0xa07aba8, L_0xa07aba8, L_0xa07aba8, L_0xa07aba8;
LS_0xa079b58_0_8 .concat [ 1 1 1 1], L_0xa07aba8, L_0xa07aba8, L_0xa07aba8, L_0xa07aba8;
L_0xa079b58 .concat [ 4 4 4 0], LS_0xa079b58_0_0, LS_0xa079b58_0_4, LS_0xa079b58_0_8;
L_0xa07ace0 .part L_0xa079748, 12, 8;
L_0xa07abf8 .part L_0xa079748, 20, 1;
L_0xa07ae90 .part L_0xa079748, 21, 10;
LS_0xa07ae10_0_0 .concat [ 1 10 1 8], C4<0>, L_0xa07ae90, L_0xa07abf8, L_0xa07ace0;
LS_0xa07ae10_0_4 .concat [ 12 0 0 0], L_0xa079b58;
L_0xa07ae10 .concat [ 20 12 0 0], LS_0xa07ae10_0_0, LS_0xa07ae10_0_4;
L_0xa07b048 .part L_0xa079748, 31, 1;
L_0xa07aee0 .part L_0xa079748, 12, 19;
L_0xa07b128 .concat [ 12 19 1 0], C4<000000000000>, L_0xa07aee0, L_0xa07b048;
L_0xa07b420 .reduce/nor v0xa078010_0;
LS_0xa07b470_0_0 .concat [ 1 1 1 1], L_0xa07b420, L_0xa07b420, L_0xa07b420, L_0xa07b420;
LS_0xa07b470_0_4 .concat [ 1 0 0 0], L_0xa07b420;
L_0xa07b470 .concat [ 4 1 0 0], LS_0xa07b470_0_0, LS_0xa07b470_0_4;
L_0xa07b638 .functor MUXZ 32, L_0xa07b0e8, v0xa078568_0, v0xa075ce0_0, C4<>;
L_0xa07b6f8 .functor MUXZ 32, L_0xa07b378, v0xa077cc0_0, v0xa075d30_0, C4<>;
L_0xa07b7f0 .concat [ 3 1 0 0], L_0xa079938, v0xa077b80_0;
L_0xa07b878 .functor MUXZ 4, C4<0000>, L_0xa07b7f0, L_0xa07b598, C4<>;
L_0xa07ca88 .part L_0xa079938, 2, 1;
L_0xa07cb20 .concat [ 5 27 0 0], L_0xa079a18, C4<000000000000000000000000000>;
L_0xa07b8c8 .functor MUXZ 32, L_0xa07b0e8, L_0xa07cb20, L_0xa07ca88, C4<>;
L_0xa07cce8 .part L_0xa079938, 0, 1;
L_0xa07cf08 .functor MUXZ 32, L_0xa07ce98, L_0xa07cc00, L_0xa07cce8, C4<>;
L_0xa07d000 .part L_0xa079938, 1, 1;
L_0xa07cda0 .functor MUXZ 32, L_0xa07b8c8, L_0xa07cf08, L_0xa07d000, C4<>;
L_0xa07e318 .part L_0xa07ce28, 0, 2;
L_0xa07d050 .part L_0xa079938, 0, 2;
L_0xa07d0a0 .part L_0xa079938, 2, 1;
L_0xa07fbc8 .part L_0xa07ce28, 0, 2;
L_0xa07fc18 .part L_0xa079938, 0, 2;
L_0xa07cd38 .part L_0xa07ce28, 2, 30;
L_0xa07fe10 .concat [ 2 30 0 0], C4<00>, L_0xa07cd38;
L_0xa07ff80 .functor MUXZ 32, v0xa074918_0, v0xa0761b8_0, v0xa076218_0, C4<>;
L_0xa07ffd0 .functor MUXZ 32, L_0xa07ff80, L_0xa07e200, v0xa0763d0_0, C4<>;
L_0xa07fed0 .functor MUXZ 32, L_0xa07ffd0, v0xa078800_0, v0xa076578_0, C4<>;
L_0xa080340 .arith/sum 32, v0xa078568_0, v0xa077cc0_0;
L_0xa080020 .functor MUXZ 32, L_0xa079670, L_0xa080340, L_0xa080228, C4<>;
L_0xa080488 .functor MUXZ 32, L_0xa080020, v0xa074918_0, v0xa078188_0, C4<>;
S_0xa075678 .scope module, "reg32" "registros" 3 277, 4 10, S_0xa00f648;
 .timescale -9 -12;
L_0xa07b0e8 .functor BUFZ 32, L_0xa07b098, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0xa07b378 .functor BUFZ 32, L_0xa07b328, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0xa0757f0 .array "WORKREG", 0 31, 31 0;
v0xa075840_0 .net *"_s0", 31 0, L_0xa07b098; 1 drivers
v0xa0758a0_0 .net *"_s4", 31 0, L_0xa07b328; 1 drivers
v0xa075900_0 .alias "clk", 0 0, v0xa077ae0_0;
v0xa075960_0 .var/i "i", 31 0;
v0xa0759c0_0 .net "readReg1", 4 0, L_0xa07b4c0; 1 drivers
v0xa075a40_0 .alias "readReg2", 4 0, v0xa078940_0;
v0xa075aa0_0 .alias "reg1", 31 0, v0xa078ac0_0;
v0xa075b00_0 .alias "reg2", 31 0, v0xa0788a0_0;
v0xa075b60_0 .alias "wr_data", 31 0, v0xa0766e0_0;
v0xa075bc0_0 .net "wr_ena", 0 0, v0xa076690_0; 1 drivers
v0xa075c20_0 .alias "wr_reg", 4 0, v0xa078758_0;
E_0xa074ae8 .event posedge, v0xa075900_0;
L_0xa07b098 .array/port v0xa0757f0, L_0xa07b4c0;
L_0xa07b328 .array/port v0xa0757f0, L_0xa079a68;
S_0xa074718 .scope module, "alu" "ALU" 3 300, 5 10, S_0xa00f648;
 .timescale -9 -12;
L_0xa07b688 .functor AND 1, L_0xa07bb10, L_0xa07be00, C4<1>, C4<1>;
L_0xa07c1d8 .functor NOT 32, L_0xa07b6f8, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0xa07c558 .functor XOR 1, L_0xa07c470, L_0xa07c508, C4<0>, C4<0>;
v0xa0748b8_0 .alias "ALUCtrl", 3 0, v0xa075c80_0;
v0xa074918_0 .var "ALUout", 31 0;
v0xa074978_0 .net "EQ", 0 0, L_0xa07c9c8; 1 drivers
v0xa0749d8_0 .net "LT", 0 0, L_0xa07c768; 1 drivers
v0xa074a38_0 .net "LTU", 0 0, L_0xa07c860; 1 drivers
v0xa074a98_0 .net *"_s0", 7 0, C4<00000001>; 1 drivers
v0xa074b18_0 .net *"_s11", 0 0, L_0xa07bc18; 1 drivers
v0xa074b78_0 .net *"_s13", 31 0, L_0xa07bc68; 1 drivers
v0xa074c00_0 .net *"_s17", 0 0, L_0xa07be00; 1 drivers
v0xa074c60_0 .net *"_s18", 0 0, L_0xa07b688; 1 drivers
v0xa074cc0_0 .net *"_s20", 32 0, L_0xa07bee8; 1 drivers
v0xa074d20_0 .net *"_s22", 32 0, L_0xa07bfa8; 1 drivers
v0xa074d80_0 .net *"_s26", 0 0, C4<0>; 1 drivers
v0xa074de0_0 .net *"_s28", 32 0, L_0xa07c0f0; 1 drivers
v0xa074e40_0 .net *"_s3", 2 0, L_0xa07ba00; 1 drivers
v0xa074ea0_0 .net *"_s30", 0 0, C4<1>; 1 drivers
v0xa074f48_0 .net *"_s32", 31 0, L_0xa07c1d8; 1 drivers
v0xa074fa8_0 .net *"_s34", 32 0, L_0xa07c278; 1 drivers
v0xa075048_0 .net *"_s36", 32 0, C4<000000000000000000000000000000001>; 1 drivers
v0xa075098_0 .net *"_s38", 32 0, L_0xa07c328; 1 drivers
v0xa074ff8_0 .net *"_s43", 0 0, L_0xa07c470; 1 drivers
v0xa075140_0 .net *"_s45", 0 0, L_0xa07c508; 1 drivers
v0xa0751f0_0 .net *"_s46", 0 0, L_0xa07c558; 1 drivers
v0xa075240_0 .net *"_s49", 0 0, L_0xa07c600; 1 drivers
v0xa075190_0 .net *"_s51", 0 0, L_0xa07c718; 1 drivers
v0xa0752f8_0 .net *"_s57", 31 0, L_0xa07c8b0; 1 drivers
v0xa075290_0 .net *"_s58", 31 0, C4<00000000000000000000000000000000>; 1 drivers
v0xa0753b8_0 .var "branch", 0 0;
v0xa075348_0 .net "esp_fun", 0 0, L_0xa07bb10; 1 drivers
v0xa075480_0 .net "funcionIs", 7 0, L_0xa07ba50; 1 drivers
v0xa075408_0 .alias "in1", 31 0, v0xa075e00_0;
v0xa075550_0 .alias "in2", 31 0, v0xa075e70_0;
v0xa0754d0_0 .net "minus", 32 0, L_0xa07c3e8; 1 drivers
v0xa075628_0 .net "shamt", 4 0, L_0xa07bbc8; 1 drivers
v0xa0755a0_0 .net "shift_in", 31 0, L_0xa07bcb8; 1 drivers
v0xa075708_0 .net "shift_out", 31 0, L_0xa07c068; 1 drivers
E_0xa072c78 .event edge, v0xa075480_0, v0xa074978_0, v0xa0749d8_0, v0xa074a38_0;
E_0xa0745f0/0 .event edge, v0xa075480_0, v0xa075348_0, v0xa0754d0_0, v0xa075408_0;
E_0xa0745f0/1 .event edge, v0xa075550_0, v0xa075708_0, v0xa0749d8_0, v0xa074a38_0;
E_0xa0745f0 .event/or E_0xa0745f0/0, E_0xa0745f0/1;
L_0xa07ba00 .part L_0xa07b878, 0, 3;
L_0xa07ba50 .shift/l 8, C4<00000001>, L_0xa07ba00;
L_0xa07bb10 .part L_0xa07b878, 3, 1;
L_0xa07bbc8 .part L_0xa07b6f8, 0, 5;
L_0xa07bc18 .part L_0xa07ba50, 5, 1;
L_0xa07bc68 .ufunc TD_RV32nexpo_tb.uut.alu.flip32, 32, L_0xa07b638 (v0xa074868_0) v0xa074818_0 S_0xa074798;
L_0xa07bcb8 .functor MUXZ 32, L_0xa07bc68, L_0xa07b638, L_0xa07bc18, C4<>;
L_0xa07be00 .part L_0xa07b638, 31, 1;
L_0xa07bee8 .concat [ 32 1 0 0], L_0xa07bcb8, L_0xa07b688;
L_0xa07bfa8 .shift/rs 33, L_0xa07bee8, L_0xa07bbc8;
L_0xa07c068 .part L_0xa07bfa8, 0, 32;
L_0xa07c0f0 .concat [ 32 1 0 0], L_0xa07b638, C4<0>;
L_0xa07c278 .concat [ 32 1 0 0], L_0xa07c1d8, C4<1>;
L_0xa07c328 .arith/sum 33, L_0xa07c278, C4<000000000000000000000000000000001>;
L_0xa07c3e8 .arith/sum 33, L_0xa07c0f0, L_0xa07c328;
L_0xa07c470 .part L_0xa07b638, 31, 1;
L_0xa07c508 .part L_0xa07b6f8, 31, 1;
L_0xa07c600 .part L_0xa07b638, 31, 1;
L_0xa07c718 .part L_0xa07c3e8, 32, 1;
L_0xa07c768 .functor MUXZ 1, L_0xa07c718, L_0xa07c600, L_0xa07c558, C4<>;
L_0xa07c860 .part L_0xa07c3e8, 32, 1;
L_0xa07c8b0 .part L_0xa07c3e8, 0, 32;
L_0xa07c9c8 .cmp/eq 32, L_0xa07c8b0, C4<00000000000000000000000000000000>;
S_0xa074798 .scope function, "flip32" "flip32" 5 22, 5 22, S_0xa074718;
 .timescale -9 -12;
v0xa074818_0 .var "flip32", 31 0;
v0xa074868_0 .var "x", 31 0;
TD_RV32nexpo_tb.uut.alu.flip32 ;
    %ix/load 1, 31, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.0, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.1;
T_0.0 ;
    %mov 40, 2, 1;
T_0.1 ;
    %mov 8, 40, 1; Move signal select into place
    %ix/load 1, 30, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.2, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.3;
T_0.2 ;
    %mov 40, 2, 1;
T_0.3 ;
    %mov 9, 40, 1; Move signal select into place
    %ix/load 1, 29, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.4, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.5;
T_0.4 ;
    %mov 40, 2, 1;
T_0.5 ;
    %mov 10, 40, 1; Move signal select into place
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.6, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.7;
T_0.6 ;
    %mov 40, 2, 1;
T_0.7 ;
    %mov 11, 40, 1; Move signal select into place
    %ix/load 1, 27, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.8, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.9;
T_0.8 ;
    %mov 40, 2, 1;
T_0.9 ;
    %mov 12, 40, 1; Move signal select into place
    %ix/load 1, 26, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.10, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.11;
T_0.10 ;
    %mov 40, 2, 1;
T_0.11 ;
    %mov 13, 40, 1; Move signal select into place
    %ix/load 1, 25, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.12, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.13;
T_0.12 ;
    %mov 40, 2, 1;
T_0.13 ;
    %mov 14, 40, 1; Move signal select into place
    %ix/load 1, 24, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.14, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.15;
T_0.14 ;
    %mov 40, 2, 1;
T_0.15 ;
    %mov 15, 40, 1; Move signal select into place
    %ix/load 1, 23, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.16, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.17;
T_0.16 ;
    %mov 40, 2, 1;
T_0.17 ;
    %mov 16, 40, 1; Move signal select into place
    %ix/load 1, 22, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.18, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.19;
T_0.18 ;
    %mov 40, 2, 1;
T_0.19 ;
    %mov 17, 40, 1; Move signal select into place
    %ix/load 1, 21, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.20, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.21;
T_0.20 ;
    %mov 40, 2, 1;
T_0.21 ;
    %mov 18, 40, 1; Move signal select into place
    %ix/load 1, 20, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.22, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.23;
T_0.22 ;
    %mov 40, 2, 1;
T_0.23 ;
    %mov 19, 40, 1; Move signal select into place
    %ix/load 1, 19, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.24, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.25;
T_0.24 ;
    %mov 40, 2, 1;
T_0.25 ;
    %mov 20, 40, 1; Move signal select into place
    %ix/load 1, 18, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.26, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.27;
T_0.26 ;
    %mov 40, 2, 1;
T_0.27 ;
    %mov 21, 40, 1; Move signal select into place
    %ix/load 1, 17, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.28, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.29;
T_0.28 ;
    %mov 40, 2, 1;
T_0.29 ;
    %mov 22, 40, 1; Move signal select into place
    %ix/load 1, 16, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.30, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.31;
T_0.30 ;
    %mov 40, 2, 1;
T_0.31 ;
    %mov 23, 40, 1; Move signal select into place
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.32, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.33;
T_0.32 ;
    %mov 40, 2, 1;
T_0.33 ;
    %mov 24, 40, 1; Move signal select into place
    %ix/load 1, 14, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.34, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.35;
T_0.34 ;
    %mov 40, 2, 1;
T_0.35 ;
    %mov 25, 40, 1; Move signal select into place
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.36, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.37;
T_0.36 ;
    %mov 40, 2, 1;
T_0.37 ;
    %mov 26, 40, 1; Move signal select into place
    %ix/load 1, 12, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.38, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.39;
T_0.38 ;
    %mov 40, 2, 1;
T_0.39 ;
    %mov 27, 40, 1; Move signal select into place
    %ix/load 1, 11, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.40, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.41;
T_0.40 ;
    %mov 40, 2, 1;
T_0.41 ;
    %mov 28, 40, 1; Move signal select into place
    %ix/load 1, 10, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.42, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.43;
T_0.42 ;
    %mov 40, 2, 1;
T_0.43 ;
    %mov 29, 40, 1; Move signal select into place
    %ix/load 1, 9, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.44, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.45;
T_0.44 ;
    %mov 40, 2, 1;
T_0.45 ;
    %mov 30, 40, 1; Move signal select into place
    %ix/load 1, 8, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.46, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.47;
T_0.46 ;
    %mov 40, 2, 1;
T_0.47 ;
    %mov 31, 40, 1; Move signal select into place
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.48, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.49;
T_0.48 ;
    %mov 40, 2, 1;
T_0.49 ;
    %mov 32, 40, 1; Move signal select into place
    %ix/load 1, 6, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.50, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.51;
T_0.50 ;
    %mov 40, 2, 1;
T_0.51 ;
    %mov 33, 40, 1; Move signal select into place
    %ix/load 1, 5, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.52, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.53;
T_0.52 ;
    %mov 40, 2, 1;
T_0.53 ;
    %mov 34, 40, 1; Move signal select into place
    %ix/load 1, 4, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.54, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.55;
T_0.54 ;
    %mov 40, 2, 1;
T_0.55 ;
    %mov 35, 40, 1; Move signal select into place
    %ix/load 1, 3, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.56, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.57;
T_0.56 ;
    %mov 40, 2, 1;
T_0.57 ;
    %mov 36, 40, 1; Move signal select into place
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.58, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.59;
T_0.58 ;
    %mov 40, 2, 1;
T_0.59 ;
    %mov 37, 40, 1; Move signal select into place
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.60, 4;
    %load/x1p 40, v0xa074868_0, 1;
    %jmp T_0.61;
T_0.60 ;
    %mov 40, 2, 1;
T_0.61 ;
    %mov 38, 40, 1; Move signal select into place
    %load/v 39, v0xa074868_0, 1; Select 1 out of 32 bits
    %set/v v0xa074818_0, 8, 32;
    %end;
S_0xa073b68 .scope module, "load" "LoadfromMEM" 3 364, 6 41, S_0xa00f648;
 .timescale -9 -12;
v0xa073d10_0 .net *"_s1", 0 0, L_0xa07d2c8; 1 drivers
v0xa073d60_0 .net *"_s11", 7 0, L_0xa07d588; 1 drivers
v0xa073db0_0 .net *"_s13", 7 0, L_0xa07d610; 1 drivers
v0xa073e00_0 .net *"_s16", 0 0, C4<0>; 1 drivers
v0xa073e50_0 .net *"_s19", 0 0, L_0xa07d780; 1 drivers
v0xa073ea0_0 .net *"_s22", 0 0, C4<0>; 1 drivers
v0xa073ef0_0 .net *"_s25", 0 0, L_0xa07d890; 1 drivers
v0xa073f40_0 .net *"_s29", 0 0, L_0xa07da40; 1 drivers
v0xa073f90_0 .net *"_s3", 15 0, L_0xa07d318; 1 drivers
v0xa073fe0_0 .net *"_s31", 0 0, L_0xa07da90; 1 drivers
v0xa074030_0 .net *"_s32", 15 0, L_0xa07db58; 1 drivers
v0xa074080_0 .net *"_s34", 31 0, L_0xa07dbf0; 1 drivers
v0xa0740e0_0 .net *"_s36", 23 0, L_0xa07dc88; 1 drivers
v0xa074140_0 .net *"_s38", 31 0, L_0xa07df10; 1 drivers
v0xa0741a0_0 .net *"_s40", 31 0, L_0xa07dfb0; 1 drivers
v0xa074200_0 .net *"_s5", 15 0, L_0xa07d368; 1 drivers
v0xa0742a8_0 .net *"_s9", 0 0, L_0xa07d500; 1 drivers
v0xa074308_0 .net "addr_LSB", 1 0, L_0xa07e318; 1 drivers
v0xa0743a8_0 .net "data_byte", 7 0, L_0xa07d660; 1 drivers
v0xa0743f8_0 .net "data_half", 15 0, L_0xa07d420; 1 drivers
v0xa074358_0 .alias "data_mem", 31 0, v0xa078228_0;
v0xa0744a0_0 .alias "data_readed", 31 0, v0xa078a70_0;
v0xa074550_0 .net "data_width", 1 0, L_0xa07d050; 1 drivers
v0xa0745a0_0 .net "signo_byte", 0 0, L_0xa07d7d0; 1 drivers
v0xa0744f0_0 .net "signo_half", 0 0, L_0xa07d948; 1 drivers
v0xa074658_0 .net "sin_signo", 0 0, L_0xa07d0a0; 1 drivers
L_0xa07d2c8 .part L_0xa07e318, 1, 1;
L_0xa07d318 .part v0xa0790e8_0, 16, 16;
L_0xa07d368 .part v0xa0790e8_0, 0, 16;
L_0xa07d420 .functor MUXZ 16, L_0xa07d368, L_0xa07d318, L_0xa07d2c8, C4<>;
L_0xa07d500 .part L_0xa07e318, 0, 1;
L_0xa07d588 .part L_0xa07d420, 8, 8;
L_0xa07d610 .part L_0xa07d420, 0, 8;
L_0xa07d660 .functor MUXZ 8, L_0xa07d610, L_0xa07d588, L_0xa07d500, C4<>;
L_0xa07d780 .part L_0xa07d660, 7, 1;
L_0xa07d7d0 .functor MUXZ 1, L_0xa07d780, C4<0>, L_0xa07d0a0, C4<>;
L_0xa07d890 .part L_0xa07d420, 15, 1;
L_0xa07d948 .functor MUXZ 1, L_0xa07d890, C4<0>, L_0xa07d0a0, C4<>;
L_0xa07da40 .part L_0xa07d050, 1, 1;
L_0xa07da90 .part L_0xa07d050, 0, 1;
LS_0xa07db58_0_0 .concat [ 1 1 1 1], L_0xa07d948, L_0xa07d948, L_0xa07d948, L_0xa07d948;
LS_0xa07db58_0_4 .concat [ 1 1 1 1], L_0xa07d948, L_0xa07d948, L_0xa07d948, L_0xa07d948;
LS_0xa07db58_0_8 .concat [ 1 1 1 1], L_0xa07d948, L_0xa07d948, L_0xa07d948, L_0xa07d948;
LS_0xa07db58_0_12 .concat [ 1 1 1 1], L_0xa07d948, L_0xa07d948, L_0xa07d948, L_0xa07d948;
L_0xa07db58 .concat [ 4 4 4 4], LS_0xa07db58_0_0, LS_0xa07db58_0_4, LS_0xa07db58_0_8, LS_0xa07db58_0_12;
L_0xa07dbf0 .concat [ 16 16 0 0], L_0xa07d420, L_0xa07db58;
LS_0xa07dc88_0_0 .concat [ 1 1 1 1], L_0xa07d7d0, L_0xa07d7d0, L_0xa07d7d0, L_0xa07d7d0;
LS_0xa07dc88_0_4 .concat [ 1 1 1 1], L_0xa07d7d0, L_0xa07d7d0, L_0xa07d7d0, L_0xa07d7d0;
LS_0xa07dc88_0_8 .concat [ 1 1 1 1], L_0xa07d7d0, L_0xa07d7d0, L_0xa07d7d0, L_0xa07d7d0;
LS_0xa07dc88_0_12 .concat [ 1 1 1 1], L_0xa07d7d0, L_0xa07d7d0, L_0xa07d7d0, L_0xa07d7d0;
LS_0xa07dc88_0_16 .concat [ 1 1 1 1], L_0xa07d7d0, L_0xa07d7d0, L_0xa07d7d0, L_0xa07d7d0;
LS_0xa07dc88_0_20 .concat [ 1 1 1 1], L_0xa07d7d0, L_0xa07d7d0, L_0xa07d7d0, L_0xa07d7d0;
LS_0xa07dc88_1_0 .concat [ 4 4 4 4], LS_0xa07dc88_0_0, LS_0xa07dc88_0_4, LS_0xa07dc88_0_8, LS_0xa07dc88_0_12;
LS_0xa07dc88_1_4 .concat [ 4 4 0 0], LS_0xa07dc88_0_16, LS_0xa07dc88_0_20;
L_0xa07dc88 .concat [ 16 8 0 0], LS_0xa07dc88_1_0, LS_0xa07dc88_1_4;
L_0xa07df10 .concat [ 8 24 0 0], L_0xa07d660, L_0xa07dc88;
L_0xa07dfb0 .functor MUXZ 32, L_0xa07df10, L_0xa07dbf0, L_0xa07da90, C4<>;
L_0xa07e200 .functor MUXZ 32, L_0xa07dfb0, v0xa0790e8_0, L_0xa07da40, C4<>;
S_0x9fdc568 .scope module, "store" "StoretoMEM" 3 372, 6 5, S_0xa00f648;
 .timescale -9 -12;
L_0xa07d290 .functor AND 4, L_0xa07e478, L_0xa07fa98, C4<1111>, C4<1111>;
v0xa047bd0_0 .net *"_s0", 3 0, L_0xa07e478; 1 drivers
v0xa072aa0_0 .net *"_s11", 0 0, L_0xa07e6f8; 1 drivers
v0xa072b00_0 .net *"_s13", 7 0, L_0xa07e748; 1 drivers
v0xa072b60_0 .net *"_s15", 7 0, L_0xa07e800; 1 drivers
v0xa072bc8_0 .net *"_s16", 7 0, L_0xa07e850; 1 drivers
v0xa072c28_0 .net *"_s21", 0 0, L_0xa07e960; 1 drivers
v0xa072ca8_0 .net *"_s23", 7 0, L_0xa07e9e8; 1 drivers
v0xa072d08_0 .net *"_s25", 7 0, L_0xa07ea38; 1 drivers
v0xa072d90_0 .net *"_s26", 7 0, L_0xa07eac0; 1 drivers
v0xa072df0_0 .net *"_s31", 0 0, L_0xa07ec40; 1 drivers
v0xa072e80_0 .net *"_s33", 7 0, L_0xa07ec90; 1 drivers
v0xa072ee0_0 .net *"_s35", 0 0, L_0xa07eda8; 1 drivers
v0xa072f78_0 .net *"_s37", 7 0, L_0xa07ee60; 1 drivers
v0xa072fd8_0 .net *"_s39", 7 0, L_0xa07eeb0; 1 drivers
v0xa073078_0 .net *"_s40", 7 0, L_0xa07ef00; 1 drivers
v0xa0730d8_0 .net *"_s42", 7 0, L_0xa07efe0; 1 drivers
v0xa073180_0 .net *"_s45", 0 0, L_0xa07f110; 1 drivers
v0xa0731e0_0 .net *"_s46", 3 0, C4<1111>; 1 drivers
v0xa073280_0 .net *"_s49", 0 0, L_0xa07f1c0; 1 drivers
v0xa0732d0_0 .net *"_s51", 0 0, L_0xa07f248; 1 drivers
v0xa073230_0 .net *"_s52", 3 0, C4<1100>; 1 drivers
v0xa073378_0 .net *"_s54", 3 0, C4<0011>; 1 drivers
v0xa073428_0 .net *"_s56", 3 0, L_0xa07f300; 1 drivers
v0xa073478_0 .net *"_s59", 0 0, L_0xa07f3c0; 1 drivers
v0xa0733c8_0 .net *"_s61", 0 0, L_0xa07f298; 1 drivers
v0xa073530_0 .net *"_s62", 3 0, C4<1000>; 1 drivers
v0xa0734c8_0 .net *"_s64", 3 0, C4<0100>; 1 drivers
v0xa0735f0_0 .net *"_s66", 3 0, L_0xa07f4f0; 1 drivers
v0xa073580_0 .net *"_s69", 0 0, L_0xa07f628; 1 drivers
v0xa0736b8_0 .net *"_s7", 7 0, L_0xa07e5b8; 1 drivers
v0xa073640_0 .net *"_s70", 3 0, C4<0010>; 1 drivers
v0xa073788_0 .net *"_s72", 3 0, C4<0001>; 1 drivers
v0xa073708_0 .net *"_s74", 3 0, L_0xa07ef50; 1 drivers
v0xa073860_0 .net *"_s76", 3 0, L_0xa07f890; 1 drivers
v0xa0737d8_0 .net *"_s78", 3 0, L_0xa07f988; 1 drivers
v0xa073940_0 .net "addr_LSB", 1 0, L_0xa07fbc8; 1 drivers
v0xa0738b0_0 .alias "data", 31 0, v0xa078cf8_0;
v0xa073a28_0 .net "data_width", 1 0, L_0xa07fc18; 1 drivers
v0xa073990_0 .net "mask", 3 0, L_0xa07fa98; 1 drivers
v0xa073b18_0 .alias "mask_data", 3 0, v0xa079170_0;
v0xa073a78_0 .alias "memWrite", 0 0, v0xa076470_0;
v0xa073c10_0 .alias "wr_datatoMem", 31 0, v0xa079230_0;
L_0xa07e478 .concat [ 1 1 1 1], v0xa078070_0, v0xa078070_0, v0xa078070_0, v0xa078070_0;
L_0xa07e568 .part/pv L_0xa07e5b8, 0, 8, 32;
L_0xa07e5b8 .part L_0xa07d1b8, 0, 8;
L_0xa07e640 .part/pv L_0xa07e850, 8, 8, 32;
L_0xa07e6f8 .part L_0xa07fbc8, 0, 1;
L_0xa07e748 .part L_0xa07d1b8, 0, 8;
L_0xa07e800 .part L_0xa07d1b8, 8, 8;
L_0xa07e850 .functor MUXZ 8, L_0xa07e800, L_0xa07e748, L_0xa07e6f8, C4<>;
L_0xa07e910 .part/pv L_0xa07eac0, 16, 8, 32;
L_0xa07e960 .part L_0xa07fbc8, 1, 1;
L_0xa07e9e8 .part L_0xa07d1b8, 0, 8;
L_0xa07ea38 .part L_0xa07d1b8, 16, 8;
L_0xa07eac0 .functor MUXZ 8, L_0xa07ea38, L_0xa07e9e8, L_0xa07e960, C4<>;
L_0xa07ebf0 .part/pv L_0xa07efe0, 24, 8, 32;
L_0xa07ec40 .part L_0xa07fbc8, 0, 1;
L_0xa07ec90 .part L_0xa07d1b8, 0, 8;
L_0xa07eda8 .part L_0xa07fbc8, 1, 1;
L_0xa07ee60 .part L_0xa07d1b8, 8, 8;
L_0xa07eeb0 .part L_0xa07d1b8, 24, 8;
L_0xa07ef00 .functor MUXZ 8, L_0xa07eeb0, L_0xa07ee60, L_0xa07eda8, C4<>;
L_0xa07efe0 .functor MUXZ 8, L_0xa07ef00, L_0xa07ec90, L_0xa07ec40, C4<>;
L_0xa07f110 .part L_0xa07fc18, 1, 1;
L_0xa07f1c0 .part L_0xa07fc18, 0, 1;
L_0xa07f248 .part L_0xa07fbc8, 1, 1;
L_0xa07f300 .functor MUXZ 4, C4<0011>, C4<1100>, L_0xa07f248, C4<>;
L_0xa07f3c0 .part L_0xa07fbc8, 1, 1;
L_0xa07f298 .part L_0xa07fbc8, 0, 1;
L_0xa07f4f0 .functor MUXZ 4, C4<0100>, C4<1000>, L_0xa07f298, C4<>;
L_0xa07f628 .part L_0xa07fbc8, 0, 1;
L_0xa07ef50 .functor MUXZ 4, C4<0001>, C4<0010>, L_0xa07f628, C4<>;
L_0xa07f890 .functor MUXZ 4, L_0xa07ef50, L_0xa07f4f0, L_0xa07f3c0, C4<>;
L_0xa07f988 .functor MUXZ 4, L_0xa07f890, L_0xa07f300, L_0xa07f1c0, C4<>;
L_0xa07fa98 .functor MUXZ 4, L_0xa07f988, C4<1111>, L_0xa07f110, C4<>;
    .scope S_0xa075678;
T_1 ;
    %set/v v0xa075960_0, 0, 32;
T_1.0 ;
    %load/v 8, v0xa075960_0, 32;
   %cmpi/s 8, 32, 32;
    %jmp/0xz T_1.1, 5;
    %ix/getv/s 3, v0xa075960_0;
    %jmp/1 t_0, 4;
    %ix/load 0, 32, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0xa0757f0, 0, 0;
t_0 ;
    %ix/load 0, 1, 0;
    %load/vp0/s 8, v0xa075960_0, 32;
    %set/v v0xa075960_0, 8, 32;
    %jmp T_1.0;
T_1.1 ;
    %end;
    .thread T_1;
    .scope S_0xa075678;
T_2 ;
    %wait E_0xa074ae8;
    %load/v 8, v0xa075bc0_0, 1;
    %load/v 9, v0xa075c20_0, 5;
    %or/r 9, 9, 5;
    %and 8, 9, 1;
    %jmp/0xz  T_2.0, 8;
    %load/v 8, v0xa075b60_0, 32;
    %ix/getv 3, v0xa075c20_0;
    %jmp/1 t_1, 4;
    %ix/load 0, 32, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0xa0757f0, 0, 8;
t_1 ;
T_2.0 ;
    %jmp T_2;
    .thread T_2;
    .scope S_0xa074718;
T_3 ;
    %wait E_0xa0745f0;
    %load/v 8, v0xa075480_0, 1; Only need 1 of 8 bits
; Save base=8 wid=1 in lookaside.
    %jmp/0  T_3.0, 8;
    %load/v 9, v0xa075348_0, 1;
    %jmp/0  T_3.3, 9;
    %load/v 10, v0xa0754d0_0, 33;
    %jmp/1  T_3.5, 9;
T_3.3 ; End of true expr.
    %load/v 43, v0xa075408_0, 32;
    %mov 75, 0, 1;
    %load/v 76, v0xa075550_0, 32;
    %mov 108, 0, 1;
    %add 43, 76, 33;
    %jmp/0  T_3.4, 9;
 ; End of false expr.
    %blend  10, 43, 33; Condition unknown.
    %jmp  T_3.5;
T_3.4 ;
    %mov 10, 43, 33; Return false value
T_3.5 ;
    %jmp/1  T_3.2, 8;
T_3.0 ; End of true expr.
    %jmp/0  T_3.1, 8;
 ; End of false expr.
    %blend  10, 0, 33; Condition unknown.
    %jmp  T_3.2;
T_3.1 ;
    %mov 10, 0, 33; Return false value
T_3.2 ;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.9, 4;
    %load/x1p 8, v0xa075480_0, 1;
    %jmp T_3.10;
T_3.9 ;
    %mov 8, 2, 1;
T_3.10 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0  T_3.6, 8;
    %load/v 76, v0xa075708_0, 32;
    %set/v v0xa074868_0, 76, 32;
    %fork TD_RV32nexpo_tb.uut.alu.flip32, S_0xa074798;
    %join;
    %load/v  76, v0xa074818_0, 32;
    %mov 43, 76, 32;
    %mov 75, 0, 1;
    %jmp/1  T_3.8, 8;
T_3.6 ; End of true expr.
    %jmp/0  T_3.7, 8;
 ; End of false expr.
    %blend  43, 0, 33; Condition unknown.
    %jmp  T_3.8;
T_3.7 ;
    %mov 43, 0, 33; Return false value
T_3.8 ;
    %or 10, 43, 33;
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.14, 4;
    %load/x1p 8, v0xa075480_0, 1;
    %jmp T_3.15;
T_3.14 ;
    %mov 8, 2, 1;
T_3.15 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0  T_3.11, 8;
    %load/v 76, v0xa0749d8_0, 1;
    %mov 77, 0, 31;
    %mov 43, 76, 32;
    %mov 75, 0, 1;
    %jmp/1  T_3.13, 8;
T_3.11 ; End of true expr.
    %jmp/0  T_3.12, 8;
 ; End of false expr.
    %blend  43, 0, 33; Condition unknown.
    %jmp  T_3.13;
T_3.12 ;
    %mov 43, 0, 33; Return false value
T_3.13 ;
    %or 10, 43, 33;
    %ix/load 1, 3, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.19, 4;
    %load/x1p 8, v0xa075480_0, 1;
    %jmp T_3.20;
T_3.19 ;
    %mov 8, 2, 1;
T_3.20 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0  T_3.16, 8;
    %load/v 76, v0xa074a38_0, 1;
    %mov 77, 0, 31;
    %mov 43, 76, 32;
    %mov 75, 0, 1;
    %jmp/1  T_3.18, 8;
T_3.16 ; End of true expr.
    %jmp/0  T_3.17, 8;
 ; End of false expr.
    %blend  43, 0, 33; Condition unknown.
    %jmp  T_3.18;
T_3.17 ;
    %mov 43, 0, 33; Return false value
T_3.18 ;
    %or 10, 43, 33;
    %ix/load 1, 4, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.24, 4;
    %load/x1p 8, v0xa075480_0, 1;
    %jmp T_3.25;
T_3.24 ;
    %mov 8, 2, 1;
T_3.25 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0  T_3.21, 8;
    %load/v 43, v0xa075408_0, 32;
    %mov 75, 0, 1;
    %load/v 76, v0xa075550_0, 32;
    %mov 108, 0, 1;
    %xor 43, 76, 33;
    %jmp/1  T_3.23, 8;
T_3.21 ; End of true expr.
    %jmp/0  T_3.22, 8;
 ; End of false expr.
    %blend  43, 0, 33; Condition unknown.
    %jmp  T_3.23;
T_3.22 ;
    %mov 43, 0, 33; Return false value
T_3.23 ;
    %or 10, 43, 33;
    %ix/load 1, 5, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.29, 4;
    %load/x1p 8, v0xa075480_0, 1;
    %jmp T_3.30;
T_3.29 ;
    %mov 8, 2, 1;
T_3.30 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0  T_3.26, 8;
    %load/v 43, v0xa075708_0, 32;
    %mov 75, 0, 1;
    %jmp/1  T_3.28, 8;
T_3.26 ; End of true expr.
    %jmp/0  T_3.27, 8;
 ; End of false expr.
    %blend  43, 0, 33; Condition unknown.
    %jmp  T_3.28;
T_3.27 ;
    %mov 43, 0, 33; Return false value
T_3.28 ;
    %or 10, 43, 33;
    %ix/load 1, 6, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.34, 4;
    %load/x1p 8, v0xa075480_0, 1;
    %jmp T_3.35;
T_3.34 ;
    %mov 8, 2, 1;
T_3.35 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0  T_3.31, 8;
    %load/v 43, v0xa075408_0, 32;
    %mov 75, 0, 1;
    %load/v 76, v0xa075550_0, 32;
    %mov 108, 0, 1;
    %or 43, 76, 33;
    %jmp/1  T_3.33, 8;
T_3.31 ; End of true expr.
    %jmp/0  T_3.32, 8;
 ; End of false expr.
    %blend  43, 0, 33; Condition unknown.
    %jmp  T_3.33;
T_3.32 ;
    %mov 43, 0, 33; Return false value
T_3.33 ;
    %or 10, 43, 33;
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.39, 4;
    %load/x1p 8, v0xa075480_0, 1;
    %jmp T_3.40;
T_3.39 ;
    %mov 8, 2, 1;
T_3.40 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0  T_3.36, 8;
    %load/v 43, v0xa075408_0, 32;
    %mov 75, 0, 1;
    %load/v 76, v0xa075550_0, 32;
    %mov 108, 0, 1;
    %and 43, 76, 33;
    %jmp/1  T_3.38, 8;
T_3.36 ; End of true expr.
    %jmp/0  T_3.37, 8;
 ; End of false expr.
    %blend  43, 0, 33; Condition unknown.
    %jmp  T_3.38;
T_3.37 ;
    %mov 43, 0, 33; Return false value
T_3.38 ;
    %or 10, 43, 33;
    %set/v v0xa074918_0, 10, 32;
    %jmp T_3;
    .thread T_3, $push;
    .scope S_0xa074718;
T_4 ;
    %wait E_0xa072c78;
    %load/v 8, v0xa075480_0, 1; Only need 1 of 8 bits
; Save base=8 wid=1 in lookaside.
    %load/v 9, v0xa074978_0, 1;
    %and 8, 9, 1;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_4.0, 4;
    %load/x1p 9, v0xa075480_0, 1;
    %jmp T_4.1;
T_4.0 ;
    %mov 9, 2, 1;
T_4.1 ;
; Save base=9 wid=1 in lookaside.
    %load/v 10, v0xa074978_0, 1;
    %inv 10, 1;
    %and 9, 10, 1;
    %or 8, 9, 1;
    %ix/load 1, 4, 0;
    %mov 4, 0, 1;
    %jmp/1 T_4.2, 4;
    %load/x1p 9, v0xa075480_0, 1;
    %jmp T_4.3;
T_4.2 ;
    %mov 9, 2, 1;
T_4.3 ;
; Save base=9 wid=1 in lookaside.
    %load/v 10, v0xa0749d8_0, 1;
    %and 9, 10, 1;
    %or 8, 9, 1;
    %ix/load 1, 5, 0;
    %mov 4, 0, 1;
    %jmp/1 T_4.4, 4;
    %load/x1p 9, v0xa075480_0, 1;
    %jmp T_4.5;
T_4.4 ;
    %mov 9, 2, 1;
T_4.5 ;
; Save base=9 wid=1 in lookaside.
    %load/v 10, v0xa0749d8_0, 1;
    %inv 10, 1;
    %and 9, 10, 1;
    %or 8, 9, 1;
    %ix/load 1, 6, 0;
    %mov 4, 0, 1;
    %jmp/1 T_4.6, 4;
    %load/x1p 9, v0xa075480_0, 1;
    %jmp T_4.7;
T_4.6 ;
    %mov 9, 2, 1;
T_4.7 ;
; Save base=9 wid=1 in lookaside.
    %load/v 10, v0xa074a38_0, 1;
    %and 9, 10, 1;
    %or 8, 9, 1;
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_4.8, 4;
    %load/x1p 9, v0xa075480_0, 1;
    %jmp T_4.9;
T_4.8 ;
    %mov 9, 2, 1;
T_4.9 ;
; Save base=9 wid=1 in lookaside.
    %load/v 10, v0xa074a38_0, 1;
    %inv 10, 1;
    %and 9, 10, 1;
    %or 8, 9, 1;
    %set/v v0xa0753b8_0, 8, 1;
    %jmp T_4;
    .thread T_4, $push;
    .scope S_0xa00f648;
T_5 ;
    %set/v v0xa077b30_0, 1, 1;
    %end;
    .thread T_5;
    .scope S_0xa00f648;
T_6 ;
    %set/v v0xa078568_0, 0, 32;
    %end;
    .thread T_6;
    .scope S_0xa00f648;
T_7 ;
    %set/v v0xa078800_0, 0, 32;
    %end;
    .thread T_7;
    .scope S_0xa00f648;
T_8 ;
    %wait E_0xa074ae8;
    %load/v 8, v0xa0789b0_0, 1;
    %jmp/0xz  T_8.0, 8;
    %ix/load 0, 32, 0;
    %assign/v0 v0xa078568_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0xa078800_0, 0, 0;
    %jmp T_8.1;
T_8.0 ;
    %load/v 8, v0xa0783b8_0, 1;
    %jmp/0xz  T_8.2, 8;
    %load/v 8, v0xa078800_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0xa078568_0, 0, 8;
    %load/v 8, v0xa078698_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0xa078800_0, 0, 8;
T_8.2 ;
T_8.1 ;
    %jmp T_8;
    .thread T_8;
    .scope S_0xa00f648;
T_9 ;
    %wait E_0xa074ae8;
    %load/v 8, v0xa0789b0_0, 1;
    %jmp/0xz  T_9.0, 8;
    %ix/load 0, 3, 0;
    %assign/v0 v0xa078a00_0, 0, 0;
    %jmp T_9.1;
T_9.0 ;
    %load/v 8, v0xa0784a8_0, 3;
    %ix/load 0, 3, 0;
    %assign/v0 v0xa078a00_0, 0, 8;
T_9.1 ;
    %jmp T_9;
    .thread T_9;
    .scope S_0xa00f648;
T_10 ;
    %wait E_0xa074ae8;
    %load/v 8, v0xa0789b0_0, 1;
    %jmp/0xz  T_10.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0xa077b30_0, 0, 1;
    %jmp T_10.1;
T_10.0 ;
    %load/v 8, v0xa078130_0, 1;
    %ix/load 0, 1, 0;
    %assign/v0 v0xa077b30_0, 0, 8;
T_10.1 ;
    %jmp T_10;
    .thread T_10;
    .scope S_0xa00f648;
T_11 ;
    %wait E_0xa010028;
    %load/v 8, v0xa078a00_0, 3;
    %set/v v0xa0784a8_0, 8, 3;
    %set/v v0xa0783b8_0, 1, 1;
    %load/v 8, v0xa078a00_0, 3;
    %cmpi/u 8, 0, 3;
    %jmp/1 T_11.0, 6;
    %cmpi/u 8, 1, 3;
    %jmp/1 T_11.1, 6;
    %cmpi/u 8, 3, 3;
    %jmp/1 T_11.2, 6;
    %cmpi/u 8, 4, 3;
    %jmp/1 T_11.3, 6;
    %cmpi/u 8, 2, 3;
    %jmp/1 T_11.4, 6;
    %set/v v0xa0784a8_0, 0, 3;
    %jmp T_11.6;
T_11.0 ;
    %movi 8, 1, 3;
    %set/v v0xa0784a8_0, 8, 3;
    %jmp T_11.6;
T_11.1 ;
    %load/v 8, v0xa0781d8_0, 1;
    %jmp/0xz  T_11.7, 8;
    %movi 8, 3, 3;
    %set/v v0xa0784a8_0, 8, 3;
    %set/v v0xa0783b8_0, 0, 1;
T_11.7 ;
    %load/v 8, v0xa078130_0, 1;
    %jmp/0xz  T_11.9, 8;
    %movi 8, 3, 3;
    %set/v v0xa0784a8_0, 8, 3;
T_11.9 ;
    %load/v 8, v0xa077c70_0, 1;
    %jmp/0xz  T_11.11, 8;
    %movi 8, 2, 3;
    %set/v v0xa0784a8_0, 8, 3;
    %set/v v0xa0783b8_0, 0, 1;
T_11.11 ;
    %load/v 8, v0xa077a60_0, 1;
    %jmp/0xz  T_11.13, 8;
    %movi 8, 4, 4;
    %set/v v0xa0784a8_0, 8, 3;
    %set/v v0xa0783b8_0, 0, 1;
T_11.13 ;
    %jmp T_11.6;
T_11.2 ;
    %movi 8, 1, 3;
    %set/v v0xa0784a8_0, 8, 3;
    %jmp T_11.6;
T_11.3 ;
    %set/v v0xa0783b8_0, 0, 1;
    %jmp T_11.6;
T_11.4 ;
    %set/v v0xa0783b8_0, 0, 1;
    %jmp T_11.6;
T_11.6 ;
    %jmp T_11;
    .thread T_11, $push;
    .scope S_0xa00f648;
T_12 ;
    %wait E_0xa03ab20;
    %set/v v0xa077a60_0, 0, 1;
    %set/v v0xa077c70_0, 0, 1;
    %set/v v0xa077fc0_0, 0, 1;
    %set/v v0xa0781d8_0, 0, 1;
    %set/v v0xa078070_0, 0, 1;
    %set/v v0xa077e60_0, 0, 1;
    %set/v v0xa078010_0, 0, 1;
    %set/v v0xa077f70_0, 0, 1;
    %set/v v0xa078188_0, 0, 1;
    %set/v v0xa077eb0_0, 0, 1;
    %set/v v0xa0780d0_0, 0, 1;
    %set/v v0xa077f10_0, 0, 1;
    %set/v v0xa076690_0, 0, 1;
    %set/v v0xa075ce0_0, 0, 1;
    %set/v v0xa075d30_0, 0, 1;
    %set/v v0xa076578_0, 0, 1;
    %set/v v0xa0763d0_0, 0, 1;
    %set/v v0xa077b80_0, 2, 1;
    %set/v v0xa076218_0, 0, 1;
    %load/v 8, v0xa078508_0, 7;
    %cmpi/u 8, 3, 7;
    %jmp/1 T_12.0, 6;
    %cmpi/u 8, 15, 7;
    %jmp/1 T_12.1, 6;
    %cmpi/u 8, 19, 7;
    %jmp/1 T_12.2, 6;
    %cmpi/u 8, 23, 7;
    %jmp/1 T_12.3, 6;
    %cmpi/u 8, 35, 7;
    %jmp/1 T_12.4, 6;
    %cmpi/u 8, 51, 7;
    %jmp/1 T_12.5, 6;
    %cmpi/u 8, 55, 7;
    %jmp/1 T_12.6, 6;
    %cmpi/u 8, 99, 7;
    %jmp/1 T_12.7, 6;
    %cmpi/u 8, 103, 7;
    %jmp/1 T_12.8, 6;
    %cmpi/u 8, 111, 7;
    %jmp/1 T_12.9, 6;
    %cmpi/u 8, 115, 7;
    %jmp/1 T_12.10, 6;
    %set/v v0xa077c70_0, 1, 1;
    %set/v v0xa075ce0_0, 2, 1;
    %set/v v0xa075d30_0, 2, 1;
    %jmp T_12.12;
T_12.0 ;
    %set/v v0xa0781d8_0, 1, 1;
    %set/v v0xa075d30_0, 1, 1;
    %set/v v0xa0763d0_0, 1, 1;
    %set/v v0xa076690_0, 1, 1;
    %jmp T_12.12;
T_12.1 ;
    %set/v v0xa077f10_0, 1, 1;
    %jmp T_12.12;
T_12.2 ;
    %set/v v0xa077fc0_0, 1, 1;
    %set/v v0xa076690_0, 1, 1;
    %set/v v0xa075d30_0, 1, 1;
    %load/v 8, v0xa077be0_0, 2; Only need 2 of 3 bits
; Save base=8 wid=2 in lookaside.
    %cmpi/u 8, 1, 2;
    %mov 8, 4, 1;
    %jmp/0  T_12.13, 8;
    %ix/load 1, 5, 0;
    %mov 4, 0, 1;
    %jmp/1 T_12.16, 4;
    %load/x1p 9, v0xa077e10_0, 1;
    %jmp T_12.17;
T_12.16 ;
    %mov 9, 2, 1;
T_12.17 ;
; Save base=9 wid=1 in lookaside.
    %jmp/1  T_12.15, 8;
T_12.13 ; End of true expr.
    %jmp/0  T_12.14, 8;
 ; End of false expr.
    %blend  9, 0, 1; Condition unknown.
    %jmp  T_12.15;
T_12.14 ;
    %mov 9, 0, 1; Return false value
T_12.15 ;
    %set/v v0xa077b80_0, 9, 1;
    %jmp T_12.12;
T_12.3 ;
    %set/v v0xa077e60_0, 1, 1;
    %set/v v0xa075ce0_0, 1, 1;
    %set/v v0xa075d30_0, 1, 1;
    %set/v v0xa076690_0, 1, 1;
    %jmp T_12.12;
T_12.4 ;
    %set/v v0xa078070_0, 1, 1;
    %set/v v0xa075d30_0, 1, 1;
    %set/v v0xa0763d0_0, 2, 1;
    %set/v v0xa076578_0, 2, 1;
    %jmp T_12.12;
T_12.5 ;
    %set/v v0xa077fc0_0, 1, 1;
    %set/v v0xa076690_0, 1, 1;
    %ix/load 1, 5, 0;
    %mov 4, 0, 1;
    %jmp/1 T_12.18, 4;
    %load/x1p 8, v0xa077e10_0, 1;
    %jmp T_12.19;
T_12.18 ;
    %mov 8, 2, 1;
T_12.19 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0xa077b80_0, 8, 1;
    %jmp T_12.12;
T_12.6 ;
    %set/v v0xa078010_0, 1, 1;
    %set/v v0xa075d30_0, 1, 1;
    %set/v v0xa076690_0, 1, 1;
    %jmp T_12.12;
T_12.7 ;
    %set/v v0xa077eb0_0, 1, 1;
    %set/v v0xa0763d0_0, 2, 1;
    %set/v v0xa076578_0, 2, 1;
    %jmp T_12.12;
T_12.8 ;
    %set/v v0xa078188_0, 1, 1;
    %set/v v0xa075d30_0, 1, 1;
    %set/v v0xa0763d0_0, 2, 1;
    %set/v v0xa076578_0, 1, 1;
    %set/v v0xa076690_0, 1, 1;
    %jmp T_12.12;
T_12.9 ;
    %set/v v0xa077f70_0, 1, 1;
    %set/v v0xa075ce0_0, 2, 1;
    %set/v v0xa075d30_0, 2, 1;
    %set/v v0xa0763d0_0, 2, 1;
    %set/v v0xa076578_0, 1, 1;
    %set/v v0xa076690_0, 1, 1;
    %jmp T_12.12;
T_12.10 ;
    %set/v v0xa0780d0_0, 1, 1;
    %load/v 8, v0xa077be0_0, 3;
    %cmpi/u 8, 0, 3;
    %jmp/0xz  T_12.20, 4;
    %ix/load 1, 20, 0;
    %mov 4, 0, 1;
    %jmp/1 T_12.22, 4;
    %load/x1p 11, v0xa077d20_0, 1;
    %jmp T_12.23;
T_12.22 ;
    %mov 11, 2, 1;
T_12.23 ;
    %mov 8, 11, 1; Move signal select into place
    %mov 9, 0, 2;
    %cmpi/u 8, 1, 3;
    %jmp/0xz  T_12.24, 4;
    %set/v v0xa077a60_0, 1, 1;
T_12.24 ;
    %jmp T_12.21;
T_12.20 ;
    %set/v v0xa076218_0, 1, 1;
    %set/v v0xa076690_0, 1, 1;
T_12.21 ;
    %jmp T_12.12;
T_12.12 ;
    %jmp T_12;
    .thread T_12, $push;
    .scope S_0xa00f648;
T_13 ;
    %wait E_0xa005ab0;
    %load/v 8, v0xa077e60_0, 1;
    %cmp/u 1, 8, 1;
    %jmp/1 T_13.0, 6;
    %load/v 8, v0xa078010_0, 1;
    %cmp/u 1, 8, 1;
    %jmp/1 T_13.1, 6;
    %load/v 8, v0xa077eb0_0, 1;
    %cmp/u 1, 8, 1;
    %jmp/1 T_13.2, 6;
    %load/v 8, v0xa078070_0, 1;
    %cmp/u 1, 8, 1;
    %jmp/1 T_13.3, 6;
    %load/v 8, v0xa077f70_0, 1;
    %cmp/u 1, 8, 1;
    %jmp/1 T_13.4, 6;
    %load/v 8, v0xa076278_0, 32;
    %set/v v0xa077cc0_0, 8, 32;
    %jmp T_13.6;
T_13.0 ;
    %load/v 8, v0xa0767a0_0, 32;
    %set/v v0xa077cc0_0, 8, 32;
    %jmp T_13.6;
T_13.1 ;
    %load/v 8, v0xa0767a0_0, 32;
    %set/v v0xa077cc0_0, 8, 32;
    %jmp T_13.6;
T_13.2 ;
    %load/v 8, v0xa075f70_0, 32;
    %set/v v0xa077cc0_0, 8, 32;
    %jmp T_13.6;
T_13.3 ;
    %load/v 8, v0xa076750_0, 32;
    %set/v v0xa077cc0_0, 8, 32;
    %jmp T_13.6;
T_13.4 ;
    %load/v 8, v0xa076420_0, 32;
    %set/v v0xa077cc0_0, 8, 32;
    %jmp T_13.6;
T_13.6 ;
    %jmp T_13;
    .thread T_13, $push;
    .scope S_0xa00f648;
T_14 ;
    %wait E_0xa0069e0;
    %load/v 8, v0xa076218_0, 1;
    %jmp/0xz  T_14.0, 8;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.2, 4;
    %load/x1p 8, v0xa077be0_0, 1;
    %jmp T_14.3;
T_14.2 ;
    %mov 8, 2, 1;
T_14.3 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0xz  T_14.4, 8;
    %set/v v0xa076010_0, 1, 1;
    %load/v 8, v0xa078758_0, 5;
    %nor/r 8, 8, 5;
    %set/v v0xa075fc0_0, 8, 1;
    %jmp T_14.5;
T_14.4 ;
    %set/v v0xa075fc0_0, 1, 1;
    %load/v 8, v0xa0788f0_0, 5;
    %nor/r 8, 8, 5;
    %set/v v0xa076010_0, 8, 1;
T_14.5 ;
    %jmp T_14.1;
T_14.0 ;
    %set/v v0xa076010_0, 0, 1;
    %set/v v0xa075fc0_0, 0, 1;
T_14.1 ;
    %jmp T_14;
    .thread T_14, $push;
    .scope S_0xa00f648;
T_15 ;
    %wait E_0xa009578;
    %load/v 8, v0xa0779b0_0, 12;
    %cmpi/u 8, 2048, 12;
    %jmp/1 T_15.0, 6;
    %cmpi/u 8, 3072, 12;
    %jmp/1 T_15.1, 6;
    %cmpi/u 8, 3073, 12;
    %jmp/1 T_15.2, 6;
    %cmpi/u 8, 3074, 12;
    %jmp/1 T_15.3, 6;
    %cmpi/u 8, 3200, 12;
    %jmp/1 T_15.4, 6;
    %cmpi/u 8, 3201, 12;
    %jmp/1 T_15.5, 6;
    %cmpi/u 8, 3202, 12;
    %jmp/1 T_15.6, 6;
    %set/v v0xa0761b8_0, 0, 32;
    %jmp T_15.8;
T_15.0 ;
    %load/v 8, v0xa0765c8_0, 32;
    %set/v v0xa0761b8_0, 8, 32;
    %jmp T_15.8;
T_15.1 ;
    %load/v 8, v0xa077a00_0, 32; Only need 32 of 64 bits
; Save base=8 wid=32 in lookaside.
    %set/v v0xa0761b8_0, 8, 32;
    %jmp T_15.8;
T_15.2 ;
    %load/v 8, v0xa077a00_0, 32; Only need 32 of 64 bits
; Save base=8 wid=32 in lookaside.
    %set/v v0xa0761b8_0, 8, 32;
    %jmp T_15.8;
T_15.3 ;
    %load/v 8, v0xa077d80_0, 32; Only need 32 of 64 bits
; Save base=8 wid=32 in lookaside.
    %set/v v0xa0761b8_0, 8, 32;
    %jmp T_15.8;
T_15.4 ;
    %ix/load 1, 32, 0;
    %mov 4, 0, 1;
    %jmp/1 T_15.9, 4;
    %load/x1p 8, v0xa077a00_0, 32;
    %jmp T_15.10;
T_15.9 ;
    %mov 8, 2, 32;
T_15.10 ;
; Save base=8 wid=32 in lookaside.
    %set/v v0xa0761b8_0, 8, 32;
    %jmp T_15.8;
T_15.5 ;
    %ix/load 1, 32, 0;
    %mov 4, 0, 1;
    %jmp/1 T_15.11, 4;
    %load/x1p 8, v0xa077a00_0, 32;
    %jmp T_15.12;
T_15.11 ;
    %mov 8, 2, 32;
T_15.12 ;
; Save base=8 wid=32 in lookaside.
    %set/v v0xa0761b8_0, 8, 32;
    %jmp T_15.8;
T_15.6 ;
    %ix/load 1, 32, 0;
    %mov 4, 0, 1;
    %jmp/1 T_15.13, 4;
    %load/x1p 8, v0xa077d80_0, 32;
    %jmp T_15.14;
T_15.13 ;
    %mov 8, 2, 32;
T_15.14 ;
; Save base=8 wid=32 in lookaside.
    %set/v v0xa0761b8_0, 8, 32;
    %jmp T_15.8;
T_15.8 ;
    %jmp T_15;
    .thread T_15, $push;
    .scope S_0xa00f648;
T_16 ;
    %wait E_0xa074ae8;
    %load/v 8, v0xa0789b0_0, 1;
    %jmp/0xz  T_16.0, 8;
    %ix/load 0, 32, 0;
    %assign/v0 v0xa0765c8_0, 0, 0;
    %jmp T_16.1;
T_16.0 ;
    %load/v 8, v0xa076010_0, 1;
    %jmp/0xz  T_16.2, 8;
    %load/v 8, v0xa0779b0_0, 12;
    %cmpi/u 8, 2048, 12;
    %jmp/0xz  T_16.4, 4;
    %load/v 8, v0xa076060_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0xa0765c8_0, 0, 8;
T_16.4 ;
T_16.2 ;
T_16.1 ;
    %jmp T_16;
    .thread T_16;
    .scope S_0xa00f648;
T_17 ;
    %wait E_0xa074ae8;
    %load/v 8, v0xa0789b0_0, 1;
    %jmp/0xz  T_17.0, 8;
    %ix/load 0, 64, 0;
    %assign/v0 v0xa077a00_0, 0, 0;
    %ix/load 0, 64, 0;
    %assign/v0 v0xa077d80_0, 0, 0;
    %jmp T_17.1;
T_17.0 ;
    %load/v 8, v0xa077a00_0, 64;
    %mov 72, 0, 1;
    %addi 8, 1, 65;
    %ix/load 0, 64, 0;
    %assign/v0 v0xa077a00_0, 0, 8;
    %load/v 8, v0xa077d80_0, 64;
    %load/v 136, v0xa078a00_0, 3;
    %mov 139, 0, 1;
    %cmpi/u 136, 1, 4;
    %mov 136, 4, 1;
    %mov 72, 136, 1;
    %mov 73, 0, 63;
    %add 8, 72, 64;
    %ix/load 0, 64, 0;
    %assign/v0 v0xa077d80_0, 0, 8;
T_17.1 ;
    %jmp T_17;
    .thread T_17;
    .scope S_0xa0398c0;
T_18 ;
    %set/v v0xa079358_0, 1, 1;
    %end;
    .thread T_18;
    .scope S_0xa0398c0;
T_19 ;
    %set/v v0xa078bd0_0, 1, 1;
    %end;
    .thread T_19;
    .scope S_0xa0398c0;
T_20 ;
    %set/v v0xa078f88_0, 0, 32;
T_20.0 ;
    %load/v 8, v0xa078f88_0, 32;
   %cmpi/s 8, 256, 32;
    %jmp/0xz T_20.1, 5;
    %ix/getv/s 3, v0xa078f88_0;
   %jmp/1 t_2, 4;
   %ix/load 1, 0, 0;
   %set/av v0xa078b10, 0, 32;
t_2 ;
    %ix/load 0, 1, 0;
    %load/vp0/s 8, v0xa078f88_0, 32;
    %set/v v0xa078f88_0, 8, 32;
    %jmp T_20.0;
T_20.1 ;
    %vpi_call 2 30 "$readmemh", "codigo.hex", v0xa078b10;
    %end;
    .thread T_20;
    .scope S_0xa0398c0;
T_21 ;
    %wait E_0xa074ae8;
    %load/v 8, v0xa079358_0, 1;
    %jmp/0xz  T_21.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0xa078bd0_0, 0, 1;
    %jmp T_21.1;
T_21.0 ;
    %ix/load 0, 1, 0;
    %assign/v0 v0xa078bd0_0, 0, 0;
T_21.1 ;
    %jmp T_21;
    .thread T_21;
    .scope S_0xa0398c0;
T_22 ;
    %movi 8, 19, 32;
    %set/v v0xa078fd8_0, 8, 32;
    %end;
    .thread T_22;
    .scope S_0xa0398c0;
T_23 ;
    %wait E_0xa074ae8;
    %load/v 8, v0xa078c90_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_23.0, 8;
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_23.2, 4;
    %load/x1p 40, v0xa078b60_0, 8;
    %jmp T_23.3;
T_23.2 ;
    %mov 40, 2, 8;
T_23.3 ;
; Save base=40 wid=8 in lookaside.
    %ix/get 3, 40, 8;
    %load/av 8, v0xa078b10, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0xa078fd8_0, 0, 8;
T_23.0 ;
    %jmp T_23;
    .thread T_23;
    .scope S_0xa0398c0;
T_24 ;
    %wait E_0xa00a918;
    %load/v 8, v0xa078bd0_0, 1;
    %jmp/0xz  T_24.0, 8;
    %ix/load 0, 32, 0;
    %assign/v0 v0xa0790e8_0, 0, 0;
    %jmp T_24.1;
T_24.0 ;
    %load/v 8, v0xa0792b8_0, 1;
    %jmp/0xz  T_24.2, 8;
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_24.4, 4;
    %load/x1p 40, v0xa079078_0, 8;
    %jmp T_24.5;
T_24.4 ;
    %mov 40, 2, 8;
T_24.5 ;
; Save base=40 wid=8 in lookaside.
    %ix/get 3, 40, 8;
    %load/av 8, v0xa078b10, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0xa0790e8_0, 0, 8;
T_24.2 ;
T_24.1 ;
    %jmp T_24;
    .thread T_24;
    .scope S_0xa0398c0;
T_25 ;
    %set/v v0xa079028_0, 0, 32;
    %end;
    .thread T_25;
    .scope S_0xa0398c0;
T_26 ;
    %wait E_0xa074ae8;
    %load/v 8, v0xa079308_0, 1;
    %jmp/0xz  T_26.0, 8;
    %load/v 8, v0xa079170_0, 1; Only need 1 of 4 bits
; Save base=8 wid=1 in lookaside.
    %jmp/0xz  T_26.2, 8;
    %load/v 8, v0xa079230_0, 8; Only need 8 of 32 bits
; Save base=8 wid=8 in lookaside.
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_26.4, 4;
    %load/x1p 16, v0xa079078_0, 8;
    %jmp T_26.5;
T_26.4 ;
    %mov 16, 2, 8;
T_26.5 ;
; Save base=16 wid=8 in lookaside.
    %ix/get 3, 16, 8;
    %jmp/1 t_3, 4;
    %ix/load 0, 8, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0xa078b10, 0, 8;
t_3 ;
T_26.2 ;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_26.6, 4;
    %load/x1p 8, v0xa079170_0, 1;
    %jmp T_26.7;
T_26.6 ;
    %mov 8, 2, 1;
T_26.7 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0xz  T_26.8, 8;
    %ix/load 1, 8, 0;
    %mov 4, 0, 1;
    %jmp/1 T_26.10, 4;
    %load/x1p 8, v0xa079230_0, 8;
    %jmp T_26.11;
T_26.10 ;
    %mov 8, 2, 8;
T_26.11 ;
; Save base=8 wid=8 in lookaside.
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_26.12, 4;
    %load/x1p 16, v0xa079078_0, 8;
    %jmp T_26.13;
T_26.12 ;
    %mov 16, 2, 8;
T_26.13 ;
; Save base=16 wid=8 in lookaside.
    %ix/get 3, 16, 8;
    %jmp/1 t_4, 4;
    %ix/load 0, 8, 0; word width
    %ix/load 1, 8, 0; part off
    %assign/av v0xa078b10, 0, 8;
t_4 ;
T_26.8 ;
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_26.14, 4;
    %load/x1p 8, v0xa079170_0, 1;
    %jmp T_26.15;
T_26.14 ;
    %mov 8, 2, 1;
T_26.15 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0xz  T_26.16, 8;
    %ix/load 1, 16, 0;
    %mov 4, 0, 1;
    %jmp/1 T_26.18, 4;
    %load/x1p 8, v0xa079230_0, 8;
    %jmp T_26.19;
T_26.18 ;
    %mov 8, 2, 8;
T_26.19 ;
; Save base=8 wid=8 in lookaside.
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_26.20, 4;
    %load/x1p 16, v0xa079078_0, 8;
    %jmp T_26.21;
T_26.20 ;
    %mov 16, 2, 8;
T_26.21 ;
; Save base=16 wid=8 in lookaside.
    %ix/get 3, 16, 8;
    %jmp/1 t_5, 4;
    %ix/load 0, 8, 0; word width
    %ix/load 1, 16, 0; part off
    %assign/av v0xa078b10, 0, 8;
t_5 ;
T_26.16 ;
    %ix/load 1, 3, 0;
    %mov 4, 0, 1;
    %jmp/1 T_26.22, 4;
    %load/x1p 8, v0xa079170_0, 1;
    %jmp T_26.23;
T_26.22 ;
    %mov 8, 2, 1;
T_26.23 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0xz  T_26.24, 8;
    %ix/load 1, 24, 0;
    %mov 4, 0, 1;
    %jmp/1 T_26.26, 4;
    %load/x1p 8, v0xa079230_0, 8;
    %jmp T_26.27;
T_26.26 ;
    %mov 8, 2, 8;
T_26.27 ;
; Save base=8 wid=8 in lookaside.
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_26.28, 4;
    %load/x1p 16, v0xa079078_0, 8;
    %jmp T_26.29;
T_26.28 ;
    %mov 16, 2, 8;
T_26.29 ;
; Save base=16 wid=8 in lookaside.
    %ix/get 3, 16, 8;
    %jmp/1 t_6, 4;
    %ix/load 0, 8, 0; word width
    %ix/load 1, 24, 0; part off
    %assign/av v0xa078b10, 0, 8;
t_6 ;
T_26.24 ;
T_26.0 ;
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_26.30, 4;
    %load/x1p 40, v0xa079078_0, 8;
    %jmp T_26.31;
T_26.30 ;
    %mov 40, 2, 8;
T_26.31 ;
; Save base=40 wid=8 in lookaside.
    %ix/get 3, 40, 8;
    %load/av 8, v0xa078b10, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0xa079028_0, 0, 8;
    %jmp T_26;
    .thread T_26;
    .scope S_0xa0398c0;
T_27 ;
    %set/v v0xa078c40_0, 0, 1;
    %end;
    .thread T_27;
    .scope S_0xa0398c0;
T_28 ;
    %wait E_0xa01d370;
    %delay 2000, 0;
    %load/v 8, v0xa078c40_0, 1;
    %inv 8, 1;
    %ix/load 0, 1, 0;
    %assign/v0 v0xa078c40_0, 0, 8;
    %jmp T_28;
    .thread T_28, $push;
    .scope S_0xa0398c0;
T_29 ;
    %vpi_call 2 78 "$dumpvars", 1'sb0, S_0xa0398c0;
    %set/v v0xa079358_0, 1, 1;
    %delay 3000, 0;
    %set/v v0xa079358_0, 0, 1;
    %delay 1000000, 0;
    %vpi_call 2 81 "$finish";
    %end;
    .thread T_29;
    .scope S_0xa0398c0;
T_30 ;
    %wait E_0xa074ae8;
    %vpi_call 2 85 "$display", "---------";
    %vpi_call 2 86 "$display", "PC=%0d", v0xa078568_0;
    %vpi_call 2 87 "$display", "instruction %b_%b_%b_%b_%b_%b", &PV<v0xa078fd8_0, 25, 7>, &PV<v0xa078fd8_0, 20, 5>, &PV<v0xa078fd8_0, 15, 5>, &PV<v0xa078fd8_0, 12, 3>, &PV<v0xa078fd8_0, 7, 5>, &PV<v0xa078fd8_0, 0, 7>;
    %load/v 8, v0xa077fc0_0, 1;
    %cmp/u 1, 8, 1;
    %jmp/1 T_30.0, 6;
    %load/v 8, v0xa077eb0_0, 1;
    %cmp/u 1, 8, 1;
    %jmp/1 T_30.1, 6;
    %load/v 8, v0xa077f70_0, 1;
    %cmp/u 1, 8, 1;
    %jmp/1 T_30.2, 6;
    %load/v 8, v0xa078188_0, 1;
    %cmp/u 1, 8, 1;
    %jmp/1 T_30.3, 6;
    %load/v 8, v0xa077e60_0, 1;
    %cmp/u 1, 8, 1;
    %jmp/1 T_30.4, 6;
    %load/v 8, v0xa078010_0, 1;
    %cmp/u 1, 8, 1;
    %jmp/1 T_30.5, 6;
    %load/v 8, v0xa0781d8_0, 1;
    %cmp/u 1, 8, 1;
    %jmp/1 T_30.6, 6;
    %load/v 8, v0xa078070_0, 1;
    %cmp/u 1, 8, 1;
    %jmp/1 T_30.7, 6;
    %load/v 8, v0xa0780d0_0, 1;
    %cmp/u 1, 8, 1;
    %jmp/1 T_30.8, 6;
    %jmp T_30.9;
T_30.0 ;
    %ix/load 1, 5, 0;
    %mov 4, 0, 1;
    %jmp/1 T_30.10, 4;
    %load/x1p 8, v0xa078508_0, 1;
    %jmp T_30.11;
T_30.10 ;
    %mov 8, 2, 1;
T_30.11 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0xz  T_30.12, 8;
    %vpi_call 2 90 "$display", "ALUreg rd=%d rs1=%d rs2=%d funct3=%b", v0xa078758_0, v0xa0788f0_0, v0xa078940_0, v0xa077be0_0;
    %jmp T_30.13;
T_30.12 ;
    %vpi_call 2 92 "$display", "ALUimm rd=%d rs1=%d imm=%0d funct3=%b", v0xa078758_0, v0xa0788f0_0, v0xa077cc0_0, v0xa077be0_0;
T_30.13 ;
    %jmp T_30.9;
T_30.1 ;
    %vpi_call 2 94 "$display", "BRANCH rs1=%d rs2=%d funct3=%b branch?=%b", v0xa0788f0_0, v0xa078940_0, v0xa077be0_0, v0xa076518_0;
    %jmp T_30.9;
T_30.2 ;
    %vpi_call 2 96 "$display", "JAL rd=%d imm=%0d -> Nextpc=%d", v0xa0788f0_0, v0xa077cc0_0, v0xa078698_0;
    %jmp T_30.9;
T_30.3 ;
    %vpi_call 2 98 "$display", "JALR rd=%d rs1=%d imm=%0d -> Nextpc=%d", v0xa078758_0, v0xa0788f0_0, v0xa078698_0;
    %jmp T_30.9;
T_30.4 ;
    %vpi_call 2 100 "$display", "AUIPC rd=%d imm=%0d", v0xa078758_0, v0xa077cc0_0;
    %jmp T_30.9;
T_30.5 ;
    %vpi_call 2 102 "$display", "LUI rd=%d imm=%0d", v0xa078758_0, v0xa077cc0_0;
    %jmp T_30.9;
T_30.6 ;
    %vpi_call 2 104 "$display", "LOAD   rd=%d rs1=%d imm=%0d funct3=%b", v0xa078758_0, v0xa0788f0_0, v0xa077cc0_0, v0xa077be0_0;
    %jmp T_30.9;
T_30.7 ;
    %vpi_call 2 106 "$display", "STORE  rs2=%d rs1=%d imm=%0d funct3=%b", v0xa078940_0, v0xa0788f0_0, v0xa077cc0_0, v0xa077be0_0;
    %jmp T_30.9;
T_30.8 ;
    %vpi_call 2 108 "$display", "SYSTEM";
    %delay 3000, 0;
    %set/v v0xa079358_0, 1, 1;
    %vpi_call 2 110 "$display", "............................................................";
    %delay 3000, 0;
    %set/v v0xa079358_0, 0, 1;
    %delay 50000, 0;
    %vpi_call 2 112 "$finish";
    %jmp T_30.9;
T_30.9 ;
    %vpi_call 2 115 "$display", "Reg(rs1)=%d Reg(rs2)=%d Reg(rd)<-%d", v0xa078ac0_0, v0xa0788a0_0, v0xa0766e0_0;
    %jmp T_30;
    .thread T_30;
# The file index is used to find the file name in the following table.
:file_names 7;
    "N/A";
    "<interactive>";
    "RV32nexpo_tb.v";
    "RV32nexpo.v";
    "registros_32.v";
    "ALU.v";
    "interfaz_mem.v";
